Answer the following questions

1) What is the major fault with the following code? It is more intuitive to answer it without assembling it.
This code doesn't convert the ASCII found at xFFD0, it takes characters inputted from the keyboard and converts them to binary values 10 times. If the purpose of this program was to take an ASCII string store in memory locations starting at xFFD0 and convert them to binary, then it's not actually doing it.




    .ORIG x3000
    LEA R3, BINARY      
    LD  R6, ASCII       ;character
    LD  R7, COUNT       ;initialize count to 10
REPEAT   TRAP x23       ;get character
    ADD R0,R0,R6        ;convert to a number
    STR R0,R3,#0        ;store number
    ADD R3,R3,#1        ;pointer is incremented
    ADD R7,R7,#-1       ;counter is decremented
    BRp REPEAT          ;carry on
    HALT
ASCII   .FILL   xFFD0
COUNT   .FILL   #10
BINARY  .BLKW   #10
    .END



2) Explain the difference between JSR and the JSRR instructions.
JSR places the address of the instruction after it at R7 and jumps to a label, while JSRR places address of the instruction after it at R7 and jumps to an address saved in a register.

